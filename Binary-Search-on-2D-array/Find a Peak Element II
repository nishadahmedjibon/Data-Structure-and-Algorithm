class Solution {
public:
    int maxfind(vector<vector<int>>& mat, int n, int col)
    {
        int max=-1, index=-1;
        for(int i=0; i<n; i++)
        {
            if(mat[i][col]>max)
            {
                max=mat[i][col];
                index=i;
            }
        }
        return index;
    }
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int r=mat.size(), c=mat[0].size();
        int low=0, high=c-1;
        while(low<=high)
        {
            int mid=(low+high)/2;
            int maxi=maxfind(mat, r, mid);
            int left=mid-1>=0? mat[maxi][mid-1] : -1;
            int right=mid+1 < c? mat[maxi][mid+1]: -1;
            if(left<mat[maxi][mid] && right<mat[maxi][mid])
                return {maxi,mid};
            else if(mat[maxi][mid]<left)
                high=mid-1;
            else
                low=mid+1;
        }
        return {-1,-1};
    }
};
