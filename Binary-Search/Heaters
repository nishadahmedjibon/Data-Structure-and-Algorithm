problem link:  https://leetcode.com/problems/heaters/description/?envType=problem-list-v2&envId=binary-search

class Solution {
public:
    bool isValidRadius(int radius,vector<int>houses,vector<int>heaters){
        int i=0;
        int j=0;
        while(i<houses.size() && j<heaters.size())
        {
            if(abs(heaters[j]-houses[i])<=radius) 
                i++;
            else j++;
        }
        return i==houses.size();
    }
    int findRadius(vector<int>& houses, vector<int>& heaters) {
        sort(houses.begin(),houses.end());
        sort(heaters.begin(),heaters.end());

        int low=0;
        int high=INT_MAX;
        int radius=0;
        while(low<=high)
        {
            int mid=(high+low)/2;
            if(isValidRadius(mid,houses,heaters))
            {
                radius=mid;
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return radius;
    }
};
